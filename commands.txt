-- notes here should be all chronological, maybe not all, but almost --

conda
- conda create -n hidjango python=3.8
- conda activate hidjango (switching env actually do not require 'deactivate')
- conda install PACKAGE_NAME

initial setup
- django-admin startproject PROJECT
- django-admin startapp     APP
- ./manage.py migrate
- ./manage.py createsuperuser   (strong password recommended)
- ./manage.py runserver IP:PORT (e.g. localhost:8899)

main project vs apps
- a project is a folder containing all the stuff (apps, settings, templates ..)
- an app    is a folder within a (django) project, it does one specific thing

template folder (where to find for Django)
- PROJECT/PROJECT/settings.py
    - `TEMPLATES -> [ { DIRS: [ os.path.join(BASE_DIR, 'templates') ]  }  ]`

a sample index page (class-based view)
- views.py -> from django.views.generic import XxxView .. class YyyView(..): ..
- urls.py  -> .. import the view, path('PATH', VIEW, name='index'),
- PLUS, path like ''(root) should be put to the last one, it's a MUST :P

passing "context" to templates
- It's pretty obvious when using function-based views, you simply use a dict
- In class-based views, you need to write like this
    ```python3
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs):
        context['VARIABLE_NAME'] = THE_VALUE  # can be dynamic or else
        return context
    ```


